---
import { ArticleFooter } from "../components/common/ArticleFooter";
import { ArticlesHeader } from "../components/common/ArticlesHeader";
import RecentBlogs from "../components/common/RecentBlogs";
import WpContentParser from "../components/common/WpContentParser";
import HomeLayout from "../layouts/HomeLayout.astro";

export async function getStaticPaths() {
  const res = await fetch(import.meta.env.ARTICLE_URLS  + "posts?per_page=100");
  const posts = await res.json();

  const paths = posts.map((post: { slug: string }) => ({
    params: { Blog: post.slug },
  }));

  return paths;
}

const { Blog: slug } = Astro.params;

// Fetch current post
const postRes = await fetch(import.meta.env.ARTICLE_URLS + `posts?slug=${slug}`);
const postData = await postRes.json();
const post = postData[0];

// âœ… Fetch all posts to find previous/next
const allRes = await fetch(import.meta.env.ARTICLE_URLS + "posts?per_page=100");
const posts = await allRes.json();


// for recent blogs sectionn 

 const res = await fetch(import.meta.env.BLOGS);
  const blogs = await res.json();
const blogArray = Object.values(blogs);

const button = false;

const combinedData = { ...blogArray, button };
const title = "";
const description = "";
---

<HomeLayout title={title} description={description}>
  <ArticlesHeader SectionData={post} />
  <WpContentParser content={post.content.rendered} client:load />
  <ArticleFooter posts={posts} currentSlug={slug} />
    <RecentBlogs BlogData={combinedData} client:load/>
</HomeLayout>
